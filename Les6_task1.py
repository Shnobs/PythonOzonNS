shows = {'Секретные материалы': {'Жанр': 'фантастика', 'Рейтинг': 0.9}, 'Ведьмак': {'Жанр': 'фэнтази', 'Рейтинг': 0.95},
        'Клан Сопрано': {'Жанр': 'криминал', 'Рейтинг': '0.8'}, '24': {'Genre': 'драма', 'Rating': 0.75},
        'Черное зеркало': {'Жанр': 'фантастика', 'Рейтинг': 0.98}, 'Во все тяжкие': {'Жанр': 'криминал', 'Рейтинг': '0.85'},
        'Игра престолов': {'Жанр': 'фэнтази', 'Рейтинг': 0.87}, 'Карточный домик': {'Genre': 'драма',
        'Rating': 0.82}, 'Рик и Морти': {'Жанр': 'фантастика', 'Рейтинг': 1}}
def func_rating(shows):  # Создаем функции обработки словарей
    new_dict = {}
    error_count = 0
    for key in shows.keys():  # Перебираем словарь по ключам
        try:  # Пытаемся посчитать средний рейтинг при условии использования Русского языка и чисел
            if shows[key]['Рейтинг'] >= 0:  # Проверяем условие наличия integer для ключа 'Рейтинг'
                new_dict[key] = shows[key]['Рейтинг']  # Заполняем словарь
        except TypeError:  # Обходим ошибку занесения значения рейтинга как строки
            print(f'Отредактируй словарь: {key}, ну кто додумался integer загнать в string?')
            error_count += 1  # Подсчитываем количество ошибок
        except KeyError:  # Обходим ошибку отсутствия ключа 'Рейтинг'
            print(f'Отредактируй словарь: {key}, ну кто додумался изменить язык посреди словаря?')
            error_count += 1  # Подсчитываем количество ошибок
    return f'Количество обработанных сериалов {len(new_dict)} средний рейтинг ' \
           f'{round(sum(new_dict.values())/len(new_dict.values()), 3)} количество ошибок составило {error_count}'
""" return возращает f-строку с заданными значениями средний рейтинг округляется до трех знаков после запятой 
и рассчитывается по элементам словаря"""
print(func_rating(shows))